{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_lab\\\\book\\\\book-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { getSignInUserRequest } from 'apis';\nimport { AUTH_PATH, BOARD_DETAILPATH, BOARD_GPT_PATH, BOARD_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from 'constant';\nimport Container from 'layouts/Container';\nimport { useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Route, Routes } from 'react-router-dom';\nimport { useLoginUserStore } from 'stores';\nimport Authentication from 'views/Authentication';\nimport Detail from 'views/Board/Detail';\nimport Gpt from 'views/Board/Gpt';\nimport Update from 'views/Board/Update';\nimport Write from 'views/Board/Write';\nimport Main from 'views/Main';\nimport Search from 'views/Search';\nimport UserP from 'views/User';\nimport './App.css';\n\n//                component(app)                    //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // state: 로그인 유저 전역 상태   //\n  const {\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  //      state: cookie 상태      //\n  const [cookies, setCookie] = useCookies();\n  //      function: get sign in user response 처리 함수     //\n  const getSignInUserResponse = responseBody => {\n    if (!responseBody) return;\n    const {\n      code\n    } = responseBody;\n    if (code === 'AF' || code === 'NU' || code === 'DBE') {\n      resetLoginUser();\n      return;\n    }\n    const loginUser = {\n      ...responseBody\n    };\n    setLoginUser(loginUser);\n  };\n  // effect: accessToken cookie 값이 변경될 때 마다 실행할 함수     //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n  }, [cookies.accessToken]);\n  //                render(app)             //\n  //              description: 메인화면 : '/' - Main //\n  //              description: 로그인 + 회원가입 : '/auth' - Authentication   //\n  //              description: 검색화면: '/search/:word' - Search //\n  //              description: 유저 페이지 : '/user/:userEmail' -User //\n  //              description: 게시물 상세보기 : 'board/detail/:boardNumber' - Boarddetail //\n  //              description: 게시물 작성하기 : 'board/write' - Boardwrite //\n  //              description: 게시물 수정하기 : 'board/update/:boardNumber' - Boardupdate  //\n  //              description: gpt : 'board/gpt' - Boardgpt //\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      element: /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 23\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: MAIN_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: AUTH_PATH(),\n        element: /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: SEARCH_PATH(':searchWord'),\n        element: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: USER_PATH(':userEmail'),\n        element: /*#__PURE__*/_jsxDEV(UserP, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: BOARD_PATH(),\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_DETAILPATH(':boardNumber'),\n          element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_GPT_PATH(),\n          element: /*#__PURE__*/_jsxDEV(Gpt, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_WRITE_PATH(),\n          element: /*#__PURE__*/_jsxDEV(Write, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: BOARD_UPDATE_PATH(':boardNumber'),\n          element: /*#__PURE__*/_jsxDEV(Update, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        element: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"404 Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ckPwLfJ6iltiWl3sb/Eherv0LKY=\", false, function () {\n  return [useLoginUserStore, useCookies];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["getSignInUserRequest","AUTH_PATH","BOARD_DETAILPATH","BOARD_GPT_PATH","BOARD_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","Container","useEffect","useCookies","Route","Routes","useLoginUserStore","Authentication","Detail","Gpt","Update","Write","Main","Search","UserP","jsxDEV","_jsxDEV","App","_s","setLoginUser","resetLoginUser","cookies","setCookie","getSignInUserResponse","responseBody","code","loginUser","accessToken","then","children","element","fileName","_jsxFileName","lineNumber","columnNumber","path","_c","$RefreshReg$"],"sources":["C:/my_lab/book/book-frontend/src/App.tsx"],"sourcesContent":["import { getSignInUserRequest } from 'apis';\nimport { ResponseDto } from 'apis/response';\nimport { GetSignInUserResponseDto } from 'apis/response/user';\nimport {\n  AUTH_PATH,\n  BOARD_DETAILPATH,\n  BOARD_GPT_PATH,\n  BOARD_PATH,\n  BOARD_UPDATE_PATH,\n  BOARD_WRITE_PATH,\n  MAIN_PATH,\n  SEARCH_PATH,\n  USER_PATH,\n} from 'constant';\nimport Container from 'layouts/Container';\nimport { useEffect } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { Route, Routes } from 'react-router-dom';\nimport { useLoginUserStore } from 'stores';\nimport { User } from 'types/interface';\nimport Authentication from 'views/Authentication';\nimport Detail from 'views/Board/Detail';\nimport Gpt from 'views/Board/Gpt';\nimport Update from 'views/Board/Update';\nimport Write from 'views/Board/Write';\nimport Main from 'views/Main';\nimport Search from 'views/Search';\nimport UserP from 'views/User';\nimport './App.css';\n\n//                component(app)                    //\nfunction App() {\n  // state: 로그인 유저 전역 상태   //\n  const { setLoginUser, resetLoginUser } = useLoginUserStore();\n  //      state: cookie 상태      //\n  const [cookies, setCookie] = useCookies();\n  //      function: get sign in user response 처리 함수     //\n  const getSignInUserResponse = (\n    responseBody: GetSignInUserResponseDto | ResponseDto | null,\n  ) => {\n    if (!responseBody) return;\n    const { code } = responseBody;\n    if (code === 'AF' || code === 'NU' || code === 'DBE') {\n      resetLoginUser();\n      return;\n    }\n    const loginUser: User = { ...(responseBody as GetSignInUserResponseDto) };\n    setLoginUser(loginUser);\n  };\n  // effect: accessToken cookie 값이 변경될 때 마다 실행할 함수     //\n  useEffect(() => {\n    if (!cookies.accessToken) {\n      resetLoginUser();\n      return;\n    }\n    getSignInUserRequest(cookies.accessToken).then(getSignInUserResponse);\n  }, [cookies.accessToken]);\n  //                render(app)             //\n  //              description: 메인화면 : '/' - Main //\n  //              description: 로그인 + 회원가입 : '/auth' - Authentication   //\n  //              description: 검색화면: '/search/:word' - Search //\n  //              description: 유저 페이지 : '/user/:userEmail' -User //\n  //              description: 게시물 상세보기 : 'board/detail/:boardNumber' - Boarddetail //\n  //              description: 게시물 작성하기 : 'board/write' - Boardwrite //\n  //              description: 게시물 수정하기 : 'board/update/:boardNumber' - Boardupdate  //\n  //              description: gpt : 'board/gpt' - Boardgpt //\n  return (\n    <Routes>\n      <Route element={<Container />}>\n        <Route path={MAIN_PATH()} element={<Main />} />\n        <Route path={AUTH_PATH()} element={<Authentication />} />\n        <Route path={SEARCH_PATH(':searchWord')} element={<Search />} />\n        <Route path={USER_PATH(':userEmail')} element={<UserP />} />\n        <Route path={BOARD_PATH()}>\n          <Route path={BOARD_DETAILPATH(':boardNumber')} element={<Detail />} />\n          <Route path={BOARD_GPT_PATH()} element={<Gpt />} />\n          <Route path={BOARD_WRITE_PATH()} element={<Write />} />\n          <Route\n            path={BOARD_UPDATE_PATH(':boardNumber')}\n            element={<Update />}\n          />\n        </Route>\n        <Route path=\"*\" element={<h1>404 Not Found</h1>} />\n      </Route>\n    </Routes>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}