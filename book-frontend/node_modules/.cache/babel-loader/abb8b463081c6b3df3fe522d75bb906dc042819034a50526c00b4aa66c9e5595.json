{"ast":null,"code":"import axios from 'axios';\nconst DOMAIN = 'http://localhost:4000';\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\nconst authorization = accessToken => {\n  return {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n};\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\n_c = SIGN_IN_URL;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n_c2 = SIGN_UP_URL;\nexport const signInRequest = async requestBody => {\n  const result = await axios.post(SIGN_IN_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nexport const signUpRequest = async requestBody => {\n  const result = await axios.post(SIGN_UP_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\n_c3 = GET_SIGN_IN_USER_URL;\nexport const getSignInUserRequest = async accessToken => {\n  const result = await axios.get(GET_SIGN_IN_USER_URL(), authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SIGN_IN_URL\");\n$RefreshReg$(_c2, \"SIGN_UP_URL\");\n$RefreshReg$(_c3, \"GET_SIGN_IN_USER_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","authorization","accessToken","headers","Authorization","SIGN_IN_URL","_c","SIGN_UP_URL","_c2","signInRequest","requestBody","result","post","then","response","responseBody","data","catch","error","signUpRequest","GET_SIGN_IN_USER_URL","_c3","getSignInUserRequest","get","$RefreshReg$"],"sources":["C:/my_lab/book/book-frontend/src/apis/index.ts"],"sourcesContent":["import axios from 'axios';\nimport { SignInRequestDto, SignUpRequestDto } from './request/auth';\nimport { ResponseDto } from './response';\nimport { SignInResponseDto, SignUpResponseDto } from './response/auth';\nimport { GetSignInUserResponseDto } from './response/user';\n\nconst DOMAIN = 'http://localhost:4000';\n\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\n\nconst authorization = (accessToken: string) => {\n  return {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n    },\n  };\n};\n\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n\nexport const signInRequest = async (requestBody: SignInRequestDto) => {\n  const result = await axios\n    .post(SIGN_IN_URL(), requestBody)\n    .then((response) => {\n      const responseBody: SignInResponseDto = response.data;\n      return responseBody;\n    })\n    .catch((error) => {\n      if (!error.response.data) return null;\n      const responseBody: ResponseDto = error.response.data;\n      return responseBody;\n    });\n  return result;\n};\n\nexport const signUpRequest = async (requestBody: SignUpRequestDto) => {\n  const result = await axios\n    .post(SIGN_UP_URL(), requestBody)\n    .then((response) => {\n      const responseBody: SignUpResponseDto = response.data;\n      return responseBody;\n    })\n    .catch((error) => {\n      if (!error.response.data) return null;\n      const responseBody: ResponseDto = error.response.data;\n      return responseBody;\n    });\n  return result;\n};\n\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\n\nexport const getSignInUserRequest = async (accessToken: string) => {\n  const result = await axios\n    .get(GET_SIGN_IN_USER_URL(), authorization(accessToken))\n    .then((response) => {\n      const responseBody: GetSignInUserResponseDto = response.data;\n      return responseBody;\n    })\n    .catch((error) => {\n      if (!error.response) return null;\n      const responseBody: ResponseDto = error.response.data;\n      return responseBody;\n    });\n  return result;\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAMzB,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,MAAMC,UAAU,GAAI,GAAED,MAAO,SAAQ;AAErC,MAAME,aAAa,GAAIC,WAAmB,IAAK;EAC7C,OAAO;IACLC,OAAO,EAAE;MACPC,aAAa,EAAG,UAASF,WAAY;IACvC;EACF,CAAC;AACH,CAAC;AAED,MAAMG,WAAW,GAAGA,CAAA,KAAO,GAAEL,UAAW,eAAc;AAACM,EAAA,GAAjDD,WAAW;AACjB,MAAME,WAAW,GAAGA,CAAA,KAAO,GAAEP,UAAW,eAAc;AAACQ,GAAA,GAAjDD,WAAW;AAEjB,OAAO,MAAME,aAAa,GAAG,MAAOC,WAA6B,IAAK;EACpE,MAAMC,MAAM,GAAG,MAAMb,KAAK,CACvBc,IAAI,CAACP,WAAW,CAAC,CAAC,EAAEK,WAAW,CAAC,CAChCG,IAAI,CAAEC,QAAQ,IAAK;IAClB,MAAMC,YAA+B,GAAGD,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChB,IAAI,CAACA,KAAK,CAACJ,QAAQ,CAACE,IAAI,EAAE,OAAO,IAAI;IACrC,MAAMD,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC;EACJ,OAAOJ,MAAM;AACf,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAG,MAAOT,WAA6B,IAAK;EACpE,MAAMC,MAAM,GAAG,MAAMb,KAAK,CACvBc,IAAI,CAACL,WAAW,CAAC,CAAC,EAAEG,WAAW,CAAC,CAChCG,IAAI,CAAEC,QAAQ,IAAK;IAClB,MAAMC,YAA+B,GAAGD,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChB,IAAI,CAACA,KAAK,CAACJ,QAAQ,CAACE,IAAI,EAAE,OAAO,IAAI;IACrC,MAAMD,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC;EACJ,OAAOJ,MAAM;AACf,CAAC;AAED,MAAMS,oBAAoB,GAAGA,CAAA,KAAO,GAAEpB,UAAW,OAAM;AAACqB,GAAA,GAAlDD,oBAAoB;AAE1B,OAAO,MAAME,oBAAoB,GAAG,MAAOpB,WAAmB,IAAK;EACjE,MAAMS,MAAM,GAAG,MAAMb,KAAK,CACvByB,GAAG,CAACH,oBAAoB,CAAC,CAAC,EAAEnB,aAAa,CAACC,WAAW,CAAC,CAAC,CACvDW,IAAI,CAAEC,QAAQ,IAAK;IAClB,MAAMC,YAAsC,GAAGD,QAAQ,CAACE,IAAI;IAC5D,OAAOD,YAAY;EACrB,CAAC,CAAC,CACDE,KAAK,CAAEC,KAAK,IAAK;IAChB,IAAI,CAACA,KAAK,CAACJ,QAAQ,EAAE,OAAO,IAAI;IAChC,MAAMC,YAAyB,GAAGG,KAAK,CAACJ,QAAQ,CAACE,IAAI;IACrD,OAAOD,YAAY;EACrB,CAAC,CAAC;EACJ,OAAOJ,MAAM;AACf,CAAC;AAAC,IAAAL,EAAA,EAAAE,GAAA,EAAAa,GAAA;AAAAG,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAH,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}