{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_lab\\\\book\\\\book-frontend\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport { signInRequest } from 'apis';\nimport InputBox from 'components/InputBox';\nimport { MAIN_PATH } from 'constant';\nimport { useRef, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\n\n//          components 인증화면           //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  //          state: 화면 상태        //\n  const [view, setView] = useState('sign-in');\n  //          state: 쿠키 상태        //\n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수        //\n  const navigator = useNavigate();\n  //          components sign in card 컴포넌트           //\n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태       //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 상태       //\n    const passwordRef = useRef(null);\n    // state: 이메일 상태       //\n    const [email, setEmail] = useState('');\n\n    // state: 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    // state: 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 버튼 아이콘 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    // state: error 상태       //\n    const [error, setError] = useState(false);\n\n    // function : sign in response 처리 함수    //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    //          event handler: 이메일 변경이벤트 처리 함수   //\n    const onEmailChangeHandlder = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    //          event handler: 비밀번호 변경이벤트 처리 함수   //\n    const onPasswordChangeHandlder = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수   //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //          event handler: 회원가입 링크 클릭 이벤트 처리 함수   //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수   //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n\n    //          event handler: 이메일 인풋 키다운 이벤트 처리 함수   //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    //          event handler: 패스워드 인풋 키다운 이벤트 처리 함수   //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //          render(sign In)      //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandlder,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandlder,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력하셨습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpLinkClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  };\n\n  //          components sign up card 컴포넌트           //\n  _s(SignInCard, \"+MankW9kCs+nZSw2btqK0txeSEY=\");\n  const SignUpCard = () => {\n    _s2();\n    //      state: 이메일 요소 참조 상태       //\n    const emailRef = useRef(null);\n    //      state: 패스워드 요소 참조 상태       //\n    const passwordRef = useRef(null);\n    //      state: 패스워드 확인 요소 참조 상태       //\n    const passwordCheckRef = useRef(null);\n    //      state: 닉네임 요소 참조 상태       //\n    const nicknameRef = useRef(null);\n    //      state: 핸드폰 번호 요소 참조 상태       //\n    const telNumberRef = useRef(null);\n    //      state: 주소 요소 참조 상태       //\n    const addressRef = useRef(null);\n    //      state: 상세주소 요소 참조 상태       //\n    const addressDetailRef = useRef(null);\n\n    //      state: 페이지 번호 상태       //\n    const [page, setPage] = useState(2);\n    //      state: 이메일 상태       //\n    const [email, setEmail] = useState('');\n    //      state: 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    //      state: 패스워드 확인 상태       //\n    const [passwordCheck, setPasswordCheck] = useState('');\n\n    //      state: 닉네임 상태       //\n    const [nickname, setNickname] = useState('');\n    //      state: 핸드폰 번호 상태       //\n    const [telNumber, setTelNumber] = useState('');\n    //      state: 주소 상태       //\n    const [address, setAddress] = useState('');\n    //      state: 상세 주소 상태       //\n    const [addressDetail, setAddressDetail] = useState('');\n\n    //      state: 패스워드 타입 상태       //\n    const [passwordType, setpasswordType] = useState('password');\n    //      state: 패스워드 확인 타입 상태       //\n    const [passwordCheckType, setpasswordCheckType] = useState('password');\n    //      state: 이메일 에러 상태       //\n    const [isEmailError, setEmailError] = useState(false);\n    //      state: 패스워드 에러 상태       //\n    const [isPasswordError, setPasswordError] = useState(false);\n    //      state: 패스워드 확인 에러 상태       //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n\n    //      state: 닉네임 에러 상태       //\n    const [isNicknameError, setNicknameError] = useState(false);\n    //      state: 핸드폰 번호 에러 상태       //\n    const [isTelNumberError, setTelNumberError] = useState(false);\n    //      state: 주소 에러 상태       //\n    const [isAddressError, setAddressError] = useState(false);\n\n    //      state: 이메일 에러 메세지 상태       //\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    //      state: 패스워드 에러 메세지 상태       //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n    //      state: 패스워드 확인 에러 메세지 상태       //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n    //      state: 닉네임 에러 메세지 상태       //\n    const [nicknameErrorMessage, setnicknameErrorMessage] = useState('');\n    //      state: 핸드폰 번호 에러 메세지 상태       //\n    const [telNumberErrorMessage, setTelNumberErrorMessage] = useState('');\n    //      state: 주소 에러 메세지 상태       //\n    const [addressErrorMessage, setAddressErrorMessage] = useState('');\n\n    // state: 패스워드 버튼 아이콘 상태     //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    // state: 패스워드 확인 버튼 아이콘 상태     //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n    };\n    // event handler: 닉네임 변경 이벤트 처리 //\n    const onNicknameChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setNickname(value);\n    };\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\n    const onTelNumberChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setTelNumber(value);\n    };\n    // event handler: 주소 변경 이벤트 처리 //\n    const onAddressChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddress(value);\n    };\n    // event handler: 상세 주소 변경 이벤트 처리 //\n    const onAddressDetailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setAddressDetail(value);\n    };\n    //        event handler: 패스워드 버튼 클릭 이벤트 처리      //\n    const onPasswordButtonClickHanlder = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setpasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setpasswordType('password');\n      }\n    };\n    //        event handler: 패스워드 확인 버튼 클릭 이벤트 처리      //\n    const onPasswordCheckButtonClickHanlder = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setpasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setpasswordCheckType('password');\n      }\n    };\n    //        event handler: 주소 버튼 클릭 이벤트 처리      //\n    const onAdressButtonClickHandler = () => {};\n    //        event handler: 다음 단계버튼 클릭 이벤트 처리      //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 회원가입 버튼 클릭 이벤트 이벤트 처리      //\n    const onSignUpButtonClickHandler = () => {};\n\n    // event handler: 로그인 링크 클릭 이벤트 이벤트 처리      //\n    const onSignLinkClickHandler = () => {\n      setView('sign-in');\n    };\n\n    // event handler: 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      onNextButtonClickHandler();\n    };\n    // event handler: 닉네임 키 다운 이벤트 처리      //\n    const onNicknameKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리      //\n    const onTelNumberKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n    // event handler: 주소 키 다운 이벤트 처리      //\n    const onAddressKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n    // event handler: 상세 주소 키 다운 이벤트 처리      //\n    const onAdressDetailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n    };\n    //          render(sign Up)      //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"authcard-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), page === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: emailRef,\n              label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: email,\n              onChange: onEmailChangeHandler,\n              error: isEmailError,\n              message: emailErrorMessage,\n              onKeyDown: onEmailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n              type: passwordType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: password,\n              onChange: onPasswordChangeHandler,\n              error: isPasswordError,\n              message: passwordErrorMessage,\n              icon: passwordButtonIcon,\n              onButtonClick: onPasswordButtonClickHanlder,\n              onKeyDown: onPasswordKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: passwordCheckRef,\n              label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n              type: passwordCheckType,\n              placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: passwordCheck,\n              onChange: onPasswordCheckChangeHandler,\n              error: isPasswordCheckError,\n              message: passwordCheckErrorMessage,\n              icon: passwordCheckButtonIcon,\n              onButtonClick: onPasswordCheckButtonClickHanlder,\n              onKeyDown: onPasswordCheckKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputBox, {\n              ref: nicknameRef,\n              label: \"\\uB2C9\\uB124\\uC784*\",\n              type: \"text\",\n              placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: nickname,\n              onChange: onNicknameChangeHandler,\n              error: isNicknameError,\n              message: nicknameErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: telNumberRef,\n              label: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638*\",\n              type: \"text\",\n              placeholder: \"\\uD578\\uB4DC\\uD3F0 \\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n              value: telNumber,\n              onChange: onTelNumberChangeHandler,\n              error: isTelNumberError,\n              message: telNumberErrorMessage,\n              onKeyDown: onNicknameKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressRef,\n              label: \"\\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC6B0\\uD3B8\\uBC88\\uD638 \\uCC3E\\uAE30\",\n              value: address,\n              onChange: onAddressChangeHandler,\n              error: isAddressError,\n              message: addressErrorMessage,\n              icon: \"expand-right-light-icon\",\n              onButtonClick: onAdressButtonClickHandler,\n              onKeyDown: onTelNumberKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n              ref: addressDetailRef,\n              label: \"\\uC0C1\\uC138 \\uC8FC\\uC18C*\",\n              type: \"text\",\n              placeholder: \"\\uC0C1\\uC138\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n              value: addressDetail,\n              onChange: onAddressDetailChangeHandler,\n              error: false,\n              onKeyDown: onAdressDetailKeyDownHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [page === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음 단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), page === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-consent-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-check-box\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"check-ring-light-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-title\",\n                children: '개인정보동의'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 512,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"auth-consent-link\",\n                children: '더보기 >'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"black-large-full-button\",\n              onClick: onSignUpButtonClickHandler,\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요? ', ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-descroption-link\",\n                onClick: onSignLinkClickHandler,\n                children: '로그인'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this);\n  };\n\n  //          render(authentication)      //\n  _s2(SignUpCard, \"NP67JxbCg3nCZpaoukvltVJYu/U=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: ['환영합니다', \"di\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: 'FOR JP 입니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 32\n      }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 542,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"9S/UTW4boHJSdDcSeMSTDXfl25A=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["signInRequest","InputBox","MAIN_PATH","useRef","useState","useCookies","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandlder","event","value","target","onPasswordChangeHandlder","onSignInButtonClickHandler","requestBody","then","onSignUpLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","nicknameRef","telNumberRef","addressRef","addressDetailRef","page","setPage","passwordCheck","setPasswordCheck","nickname","setNickname","telNumber","setTelNumber","address","setAddress","addressDetail","setAddressDetail","setpasswordType","passwordCheckType","setpasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","isNicknameError","setNicknameError","isTelNumberError","setTelNumberError","isAddressError","setAddressError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","nicknameErrorMessage","setnicknameErrorMessage","telNumberErrorMessage","setTelNumberErrorMessage","addressErrorMessage","setAddressErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","onEmailChangeHandler","onPasswordChangeHandler","onPasswordCheckChangeHandler","onNicknameChangeHandler","onTelNumberChangeHandler","onAddressChangeHandler","onAddressDetailChangeHandler","onPasswordButtonClickHanlder","onPasswordCheckButtonClickHanlder","onAdressButtonClickHandler","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onSignUpButtonClickHandler","onSignLinkClickHandler","onPasswordCheckKeyDownHandler","onNicknameKeyDownHandler","onTelNumberKeyDownHandler","onAddressKeyDownHandler","onAdressDetailKeyDownHandler","message","id","_c","$RefreshReg$"],"sources":["C:/my_lab/book/book-frontend/src/views/Authentication/index.tsx"],"sourcesContent":["import { signInRequest } from 'apis';\nimport { SignInRequestDto } from 'apis/request/auth';\nimport { ResponseDto } from 'apis/response';\nimport { SignInResponseDto } from 'apis/response/auth';\nimport InputBox from 'components/InputBox';\nimport { MAIN_PATH } from 'constant';\nimport { ChangeEvent, KeyboardEvent, useRef, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\n\n//          components 인증화면           //\nexport default function Authentication() {\n  //          state: 화면 상태        //\n  const [view, setView] = useState<'sign-in' | 'sign-up'>('sign-in');\n  //          state: 쿠키 상태        //\n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수        //\n  const navigator = useNavigate();\n  //          components sign in card 컴포넌트           //\n  const SignInCard = () => {\n    // state: 이메일 요소 참조 상태       //\n    const emailRef = useRef<HTMLInputElement | null>(null);\n    // state: 패스워드 요소 상태       //\n    const passwordRef = useRef<HTMLInputElement | null>(null);\n    // state: 이메일 상태       //\n    const [email, setEmail] = useState<string>('');\n\n    // state: 패스워드 상태       //\n    const [password, setPassword] = useState<string>('');\n    // state: 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>(\n      'password',\n    );\n    // state: 패스워드 버튼 아이콘 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\n      'eye-light-off-icon' | 'eye-light-on-icon'\n    >('eye-light-off-icon');\n    // state: error 상태       //\n    const [error, setError] = useState<boolean>(false);\n\n    // function : sign in response 처리 함수    //\n    const signInResponse = (\n      responseBody: SignInResponseDto | ResponseDto | null,\n    ) => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다');\n        return;\n      }\n      const { code } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n\n      const { token, expirationTime } = responseBody as SignInResponseDto;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n\n      setCookie('accessToken', token, { expires, path: MAIN_PATH() });\n      navigator(MAIN_PATH());\n    };\n\n    //          event handler: 이메일 변경이벤트 처리 함수   //\n    const onEmailChangeHandlder = (event: ChangeEvent<HTMLInputElement>) => {\n      setError(false);\n      const { value } = event.target;\n      setEmail(value);\n    };\n\n    //          event handler: 비밀번호 변경이벤트 처리 함수   //\n    const onPasswordChangeHandlder = (event: ChangeEvent<HTMLInputElement>) => {\n      setError(false);\n      const { value } = event.target;\n      setPassword(value);\n    };\n\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수   //\n    const onSignInButtonClickHandler = () => {\n      const requestBody: SignInRequestDto = { email, password };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //          event handler: 회원가입 링크 클릭 이벤트 처리 함수   //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수   //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n\n    //          event handler: 이메일 인풋 키다운 이벤트 처리 함수   //\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    //          event handler: 패스워드 인풋 키다운 이벤트 처리 함수   //\n    const onPasswordKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //          render(sign In)      //\n    return (\n      <div className=\"auth-card\">\n        <div className=\"auth-card-box\">\n          <div className=\"auth-card-top\">\n            <div className=\"auth-card-title-box\">\n              <div className=\"auth-card-title\">{'로그인'}</div>\n            </div>\n            <InputBox\n              ref={emailRef}\n              label=\"이메일 주소\"\n              type=\"text\"\n              placeholder=\"이메일 주소를 입력해주세요\"\n              error={error}\n              value={email}\n              onChange={onEmailChangeHandlder}\n              onKeyDown={onEmailKeyDownHandler}\n            />\n            <InputBox\n              ref={passwordRef}\n              label=\"패스워드\"\n              type={passwordType}\n              placeholder=\"비밀번호를 입력해주세요.\"\n              error={error}\n              value={password}\n              onChange={onPasswordChangeHandlder}\n              icon={passwordButtonIcon}\n              onButtonClick={onPasswordButtonClickHandler}\n              onKeyDown={onPasswordKeyDownHandler}\n            />\n          </div>\n          <div className=\"auth-card-bottom\">\n            {error && (\n              <div className=\"auth-sign-in-error-box\">\n                <div className=\"auth-sign-in-error-message\">\n                  {\n                    '이메일 주소 또는 비밀번호를 잘못 입력하셨습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n                  }\n                </div>\n              </div>\n            )}\n            <div\n              className=\"black-large-full-button\"\n              onClick={onSignInButtonClickHandler}\n            >\n              {'로그인'}\n            </div>\n            <div className=\"auth-description-box\">\n              <div className=\"auth-description\">\n                {'신규 사용자이신가요?'}\n                <span\n                  className=\"auth-description-link\"\n                  onClick={onSignUpLinkClickHandler}\n                >\n                  {'회원가입'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //          components sign up card 컴포넌트           //\n  const SignUpCard = () => {\n    //      state: 이메일 요소 참조 상태       //\n    const emailRef = useRef<HTMLInputElement | null>(null);\n    //      state: 패스워드 요소 참조 상태       //\n    const passwordRef = useRef<HTMLInputElement | null>(null);\n    //      state: 패스워드 확인 요소 참조 상태       //\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\n    //      state: 닉네임 요소 참조 상태       //\n    const nicknameRef = useRef<HTMLInputElement | null>(null);\n    //      state: 핸드폰 번호 요소 참조 상태       //\n    const telNumberRef = useRef<HTMLInputElement | null>(null);\n    //      state: 주소 요소 참조 상태       //\n    const addressRef = useRef<HTMLInputElement | null>(null);\n    //      state: 상세주소 요소 참조 상태       //\n    const addressDetailRef = useRef<HTMLInputElement | null>(null);\n\n    //      state: 페이지 번호 상태       //\n    const [page, setPage] = useState<1 | 2>(2);\n    //      state: 이메일 상태       //\n    const [email, setEmail] = useState<string>('');\n    //      state: 패스워드 상태       //\n    const [password, setPassword] = useState<string>('');\n    //      state: 패스워드 확인 상태       //\n    const [passwordCheck, setPasswordCheck] = useState<string>('');\n\n    //      state: 닉네임 상태       //\n    const [nickname, setNickname] = useState<string>('');\n    //      state: 핸드폰 번호 상태       //\n    const [telNumber, setTelNumber] = useState<string>('');\n    //      state: 주소 상태       //\n    const [address, setAddress] = useState<string>('');\n    //      state: 상세 주소 상태       //\n    const [addressDetail, setAddressDetail] = useState<string>('');\n\n    //      state: 패스워드 타입 상태       //\n    const [passwordType, setpasswordType] = useState<'text' | 'password'>(\n      'password',\n    );\n    //      state: 패스워드 확인 타입 상태       //\n    const [passwordCheckType, setpasswordCheckType] = useState<\n      'text' | 'password'\n    >('password');\n    //      state: 이메일 에러 상태       //\n    const [isEmailError, setEmailError] = useState<boolean>(false);\n    //      state: 패스워드 에러 상태       //\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\n    //      state: 패스워드 확인 에러 상태       //\n    const [isPasswordCheckError, setPasswordCheckError] =\n      useState<boolean>(false);\n\n    //      state: 닉네임 에러 상태       //\n    const [isNicknameError, setNicknameError] = useState<boolean>(false);\n    //      state: 핸드폰 번호 에러 상태       //\n    const [isTelNumberError, setTelNumberError] = useState<boolean>(false);\n    //      state: 주소 에러 상태       //\n    const [isAddressError, setAddressError] = useState<boolean>(false);\n\n    //      state: 이메일 에러 메세지 상태       //\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\n    //      state: 패스워드 에러 메세지 상태       //\n    const [passwordErrorMessage, setPasswordErrorMessage] =\n      useState<string>('');\n    //      state: 패스워드 확인 에러 메세지 상태       //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] =\n      useState<string>('');\n    //      state: 닉네임 에러 메세지 상태       //\n    const [nicknameErrorMessage, setnicknameErrorMessage] =\n      useState<string>('');\n    //      state: 핸드폰 번호 에러 메세지 상태       //\n    const [telNumberErrorMessage, setTelNumberErrorMessage] =\n      useState<string>('');\n    //      state: 주소 에러 메세지 상태       //\n    const [addressErrorMessage, setAddressErrorMessage] = useState<string>('');\n\n    // state: 패스워드 버튼 아이콘 상태     //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\n      'eye-light-off-icon' | 'eye-light-on-icon'\n    >('eye-light-off-icon');\n    // state: 패스워드 확인 버튼 아이콘 상태     //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<\n      'eye-light-off-icon' | 'eye-light-on-icon'\n    >('eye-light-off-icon');\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setEmail(value);\n    };\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setPassword(value);\n    };\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = (\n      event: ChangeEvent<HTMLInputElement>,\n    ) => {\n      const { value } = event.target;\n      setPasswordCheck(value);\n    };\n    // event handler: 닉네임 변경 이벤트 처리 //\n    const onNicknameChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setNickname(value);\n    };\n    // event handler: 핸드폰 번호 변경 이벤트 처리 //\n    const onTelNumberChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setTelNumber(value);\n    };\n    // event handler: 주소 변경 이벤트 처리 //\n    const onAddressChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setAddress(value);\n    };\n    // event handler: 상세 주소 변경 이벤트 처리 //\n    const onAddressDetailChangeHandler = (\n      event: ChangeEvent<HTMLInputElement>,\n    ) => {\n      const { value } = event.target;\n      setAddressDetail(value);\n    };\n    //        event handler: 패스워드 버튼 클릭 이벤트 처리      //\n    const onPasswordButtonClickHanlder = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setpasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setpasswordType('password');\n      }\n    };\n    //        event handler: 패스워드 확인 버튼 클릭 이벤트 처리      //\n    const onPasswordCheckButtonClickHanlder = () => {\n      if (passwordButtonIcon === 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setpasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setpasswordCheckType('password');\n      }\n    };\n    //        event handler: 주소 버튼 클릭 이벤트 처리      //\n    const onAdressButtonClickHandler = () => {};\n    //        event handler: 다음 단계버튼 클릭 이벤트 처리      //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 회원가입 버튼 클릭 이벤트 이벤트 처리      //\n    const onSignUpButtonClickHandler = () => {};\n\n    // event handler: 로그인 링크 클릭 이벤트 이벤트 처리      //\n    const onSignLinkClickHandler = () => {\n      setView('sign-in');\n    };\n\n    // event handler: 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      onNextButtonClickHandler();\n    };\n    // event handler: 닉네임 키 다운 이벤트 처리      //\n    const onNicknameKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n    };\n    // event handler: 핸드폰 번호 키 다운 이벤트 처리      //\n    const onTelNumberKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n    };\n    // event handler: 주소 키 다운 이벤트 처리      //\n    const onAddressKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n    };\n    // event handler: 상세 주소 키 다운 이벤트 처리      //\n    const onAdressDetailKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n    };\n    //          render(sign Up)      //\n    return (\n      <div className=\"auth-card\">\n        <div className=\"auth-card-box\">\n          <div className=\"auth-card-top\">\n            <div className=\"auth-card-title-box\">\n              <div className=\"authcard-title\">{'회원가입'}</div>\n              <div className=\"auth-card-page\">{`${page}/2`}</div>\n            </div>\n            {page === 1 && (\n              <>\n                <InputBox\n                  ref={emailRef}\n                  label=\"이메일 주소*\"\n                  type=\"text\"\n                  placeholder=\"이메일 주소를 입력해주세요.\"\n                  value={email}\n                  onChange={onEmailChangeHandler}\n                  error={isEmailError}\n                  message={emailErrorMessage}\n                  onKeyDown={onEmailKeyDownHandler}\n                />\n                <InputBox\n                  ref={passwordRef}\n                  label=\"비밀번호*\"\n                  type={passwordType}\n                  placeholder=\"비밀번호를 입력해주세요.\"\n                  value={password}\n                  onChange={onPasswordChangeHandler}\n                  error={isPasswordError}\n                  message={passwordErrorMessage}\n                  icon={passwordButtonIcon}\n                  onButtonClick={onPasswordButtonClickHanlder}\n                  onKeyDown={onPasswordKeyDownHandler}\n                />\n                <InputBox\n                  ref={passwordCheckRef}\n                  label=\"비밀번호 확인*\"\n                  type={passwordCheckType}\n                  placeholder=\"비밀번호를 다시 입력해주세요.\"\n                  value={passwordCheck}\n                  onChange={onPasswordCheckChangeHandler}\n                  error={isPasswordCheckError}\n                  message={passwordCheckErrorMessage}\n                  icon={passwordCheckButtonIcon}\n                  onButtonClick={onPasswordCheckButtonClickHanlder}\n                  onKeyDown={onPasswordCheckKeyDownHandler}\n                />\n              </>\n            )}\n            {page === 2 && (\n              <>\n                <InputBox\n                  ref={nicknameRef}\n                  label=\"닉네임*\"\n                  type=\"text\"\n                  placeholder=\"닉네임을 입력해주세요.\"\n                  value={nickname}\n                  onChange={onNicknameChangeHandler}\n                  error={isNicknameError}\n                  message={nicknameErrorMessage}\n                  onKeyDown={onNicknameKeyDownHandler}\n                />\n                <InputBox\n                  ref={telNumberRef}\n                  label=\"핸드폰 번호*\"\n                  type=\"text\"\n                  placeholder=\"핸드폰 번호를 입력해주세요\"\n                  value={telNumber}\n                  onChange={onTelNumberChangeHandler}\n                  error={isTelNumberError}\n                  message={telNumberErrorMessage}\n                  onKeyDown={onNicknameKeyDownHandler}\n                />\n                <InputBox\n                  ref={addressRef}\n                  label=\"주소*\"\n                  type=\"text\"\n                  placeholder=\"우편번호 찾기\"\n                  value={address}\n                  onChange={onAddressChangeHandler}\n                  error={isAddressError}\n                  message={addressErrorMessage}\n                  icon=\"expand-right-light-icon\"\n                  onButtonClick={onAdressButtonClickHandler}\n                  onKeyDown={onTelNumberKeyDownHandler}\n                />\n                <InputBox\n                  ref={addressDetailRef}\n                  label=\"상세 주소*\"\n                  type=\"text\"\n                  placeholder=\"상세주소를 입력해주세요.\"\n                  value={addressDetail}\n                  onChange={onAddressDetailChangeHandler}\n                  error={false}\n                  onKeyDown={onAdressDetailKeyDownHandler}\n                />\n              </>\n            )}\n          </div>\n          <div className=\"auth-card-bottom\">\n            {page === 1 && (\n              <div\n                className=\"black-large-full-button\"\n                onClick={onNextButtonClickHandler}\n              >\n                {'다음 단계'}\n              </div>\n            )}\n            {page === 2 && (\n              <>\n                <div className=\"auth-consent-box\">\n                  <div className=\"auth-check-box\">\n                    <div className=\"check-ring-light-icon\"></div>\n                  </div>\n                  <div className=\"auth-consent-title\">{'개인정보동의'}</div>\n                  <div className=\"auth-consent-link\">{'더보기 >'}</div>\n                </div>\n                <div\n                  className=\"black-large-full-button\"\n                  onClick={onSignUpButtonClickHandler}\n                >\n                  {'회원가입'}\n                </div>\n              </>\n            )}\n            <div className=\"auth-description-box\">\n              <div className=\"auth-description\">\n                {'이미 계정이 있으신가요? '}{' '}\n                <span\n                  className=\"auth-descroption-link\"\n                  onClick={onSignLinkClickHandler}\n                >\n                  {'로그인'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //          render(authentication)      //\n  return (\n    <div id=\"auth-wrapper\">\n      <div className=\"auth-container\">\n        <div className=\"auth-jumbotron-box\">\n          <div className=\"auth-jumbotron-contents\">\n            <div className=\"auth-logo-icon\"></div>\n            <div className=\"auth-jumbotron-text-box\">\n              <div className=\"auth-jumbotron-text\">{'환영합니다'}di</div>\n              <div className=\"auth-jumbotron-text\">{'FOR JP 입니다'}</div>\n            </div>\n          </div>\n        </div>\n        {view === 'sign-in' && <SignInCard />}\n        {view === 'sign-up' && <SignUpCard />}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}