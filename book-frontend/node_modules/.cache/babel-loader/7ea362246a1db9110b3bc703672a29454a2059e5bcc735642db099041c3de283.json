{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_lab\\\\book\\\\book-frontend\\\\src\\\\layouts\\\\Header\\\\index.tsx\",\n  _s4 = $RefreshSig$();\nimport { AUTH_PATH, BOARD_DETAILPATH, BOARD_PATH, BOARD_UPDATE_PATH, BOARD_WRITE_PATH, MAIN_PATH, SEARCH_PATH, USER_PATH } from 'constant';\nimport { useEffect, useRef, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useBoardStore, useLoginUserStore } from 'stores';\nimport './style.css';\n\n//              components(header)      //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s4();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n  //        state: 로그인 유저 상태    //\n  const {\n    loginUser,\n    setLoginUser,\n    resetLoginUser\n  } = useLoginUserStore();\n  // state: path  상태     //\n  const {\n    pathname\n  } = useLocation();\n  // state: cookie 상태     //\n  const [cookies, setCookie] = useCookies();\n\n  //        state: 로그인상태    //\n  const [isLogin, setLogin] = useState(false);\n  //        state: 인증 페이지 상태    //\n  const [isAuthPage, setAuthPage] = useState(false);\n  //        state: 메인페이지 상태    //\n  const [isMainPage, setMainPage] = useState(false);\n  //        state: 검색 페이지 상태    //\n  const [isSearchPage, setSearchPage] = useState(false);\n  //        state: 게시물 상세 페이지 상태    //\n  const [isBoardDetailPage, setBoardDetailPage] = useState(false);\n  //        state:  게시물 작성 페이지 상태    //\n  const [isBoardWritePage, setBoardWritePage] = useState(false);\n  //        state:  게시물 수정 페이지 상태    //\n  const [isBoardUpdatePage, setBoardUpdatePage] = useState(false);\n  //        state:  유저 페이지 상태    //\n  const [isUserPage, setUserPage] = useState(false);\n\n  // navigator: 네비게이트 함수//\n  const navigate = useNavigate();\n\n  // event handler 로고 클릭 이벤트 처리함수 //\n  const onLogoClickHandler = () => {\n    navigate(MAIN_PATH());\n  };\n\n  // components(Search button)                  //\n  const SearchButton = () => {\n    _s();\n    // state: searchButton button state           //\n    const searchButtonRef = useRef(null);\n    // state: search button state           //\n    const [status, setStatus] = useState(false);\n    // state: searchword state           //\n    const [Word, setWord] = useState('');\n    // state: searchword path variable status           //\n    const {\n      searchWord\n    } = useParams();\n\n    // event handler(searchWord change)     //\n    const onSearchWordChangeHandler = event => {\n      const value = event.target.value;\n      setWord(value);\n    };\n    // event handler(searchWord key)     //\n    const onSearchWordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!searchButtonRef.current) return;\n      searchButtonRef.current.click();\n    };\n\n    // event handler(search icon click)     //\n    const onSearchButtonClickHandler = () => {\n      if (!status) {\n        setStatus(!status);\n        return;\n      }\n      navigate(SEARCH_PATH(Word));\n    };\n    // effect 검색어 path variable 변경 될 때 마다 실행할 함수     //\n    useEffect(() => {\n      if (searchWord) {\n        setWord(searchWord);\n        setStatus(true);\n      }\n    }, [searchWord]);\n    if (!status)\n      // render click false //\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this);\n    // render click true //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-search-input-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"header-search-input\",\n        type: \"text\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n        value: Word,\n        onChange: onSearchWordChangeHandler,\n        onKeyDown: onSearchWordKeyDownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: searchButtonRef,\n        className: \"icon-button\",\n        onClick: onSearchButtonClickHandler,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon search-light-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this);\n  };\n\n  //              components(로그인 또는 마이페이지 컴포넌트)      //\n  _s(SearchButton, \"x6IHr6YhcWvY/MSXwayVI2163iQ=\", false, function () {\n    return [useParams];\n  });\n  const MyPageButton = () => {\n    _s2();\n    // state: userEmail path variable 상태  //\n    const {\n      userEmail\n    } = useParams();\n\n    // event handler(마이페이지 버튼 클릭 이벤트 처리 함수)     //\n    const onMyPageButtonClickHandler = () => {\n      if (!loginUser) return;\n      const {\n        email\n      } = loginUser;\n      navigate(USER_PATH(email));\n    };\n    // event handler(마이페이지 버튼 클릭 이벤트 처리 함수)     //\n    const onSignOutButtonClickHandler = () => {\n      resetLoginUser();\n      setCookie('accessToken', '', {\n        path: MAIN_PATH(),\n        expires: new Date()\n      });\n      navigate(MAIN_PATH());\n    };\n    // event handler(로그인 버튼 클릭 이벤트 처리 함수)     //\n    const onSignInButtonHandler = () => {\n      navigate(AUTH_PATH());\n    };\n\n    // render: 로그아웃 버튼   //\n    if (isLogin && userEmail === (loginUser === null || loginUser === void 0 ? void 0 : loginUser.email)) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onSignOutButtonClickHandler,\n      children: '로그아웃'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }, this);\n    // render: 마이페이지 버튼   //\n    if (isLogin) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-button\",\n      onClick: onMyPageButtonClickHandler,\n      children: '마이페이지'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this);\n\n    // render  로그인 버튼//\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onSignInButtonHandler,\n      children: '로그인'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this);\n  };\n  //              components(업로드 버튼 컴포넌트)      //\n  _s2(MyPageButton, \"zjnfNpxfBaJFg90qi/wdBrCGSTw=\", false, function () {\n    return [useParams];\n  });\n  const UploadButton = () => {\n    _s3();\n    // state: 게시물 상태   //\n    const {\n      title,\n      content,\n      boardImageFileList,\n      resetBoard\n    } = useBoardStore();\n\n    // event handler : 업로드 버튼 클릭 이벤트 처리 함수  //\n    const onUploadButtonClickHandler = () => {};\n\n    // render  업로드 버튼//\n    if (title && content) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"black-button\",\n      onClick: onUploadButtonClickHandler,\n      children: '업로드'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this);\n\n    // render  업로드 불가 버튼//\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disable-button\",\n      children: '업로드'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 12\n    }, this);\n  };\n  // effect: path가 변경 될 때마다 실행될 함수//\n  _s3(UploadButton, \"MdcJ6jjqtJqdHcSz7jkd+0QrwbA=\", false, function () {\n    return [useBoardStore];\n  });\n  useEffect(() => {\n    const isAuthPage = pathname.startsWith(AUTH_PATH());\n    setAuthPage(isAuthPage);\n    const isMainPage = pathname === MAIN_PATH();\n    setMainPage(isMainPage);\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(''));\n    setSearchPage(isSearchPage);\n    const isBoardDetailPage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_DETAILPATH(''));\n    setBoardDetailPage(isBoardDetailPage);\n    const isBoardWritePage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_WRITE_PATH());\n    setBoardWritePage(isBoardWritePage);\n    const isBoardUpdatePage = pathname.startsWith(BOARD_PATH() + '/' + BOARD_UPDATE_PATH(''));\n    setBoardUpdatePage(isBoardUpdatePage);\n    const isUserPage = pathname.startsWith(USER_PATH(''));\n    setUserPage(isUserPage);\n  }, [pathname]);\n  // effect: login user가 변경 될 때마다 실행될 함수//\n  useEffect(() => {\n    setLogin(loginUser !== null);\n  }, [loginUser]);\n  // render   //\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-left-box\",\n        onClick: onLogoClickHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon logo-dark-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: 'FOR JP'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-right-box\",\n        children: [(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && /*#__PURE__*/_jsxDEV(SearchButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), (isMainPage || isBoardDetailPage || isSearchPage || isUserPage) && /*#__PURE__*/_jsxDEV(MyPageButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), (isBoardWritePage || isBoardUpdatePage) && /*#__PURE__*/_jsxDEV(UploadButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s4(Header, \"2IiJRYre8jDJ+kUH88HMBWpEmC0=\", false, function () {\n  return [useLoginUserStore, useLocation, useCookies, useNavigate];\n});\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["AUTH_PATH","BOARD_DETAILPATH","BOARD_PATH","BOARD_UPDATE_PATH","BOARD_WRITE_PATH","MAIN_PATH","SEARCH_PATH","USER_PATH","useEffect","useRef","useState","useCookies","useLocation","useNavigate","useParams","useBoardStore","useLoginUserStore","jsxDEV","_jsxDEV","Header","_s4","_s","$RefreshSig$","_s2","_s3","loginUser","setLoginUser","resetLoginUser","pathname","cookies","setCookie","isLogin","setLogin","isAuthPage","setAuthPage","isMainPage","setMainPage","isSearchPage","setSearchPage","isBoardDetailPage","setBoardDetailPage","isBoardWritePage","setBoardWritePage","isBoardUpdatePage","setBoardUpdatePage","isUserPage","setUserPage","navigate","onLogoClickHandler","SearchButton","searchButtonRef","status","setStatus","Word","setWord","searchWord","onSearchWordChangeHandler","event","value","target","onSearchWordKeyDownHandler","key","current","click","onSearchButtonClickHandler","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onKeyDown","ref","MyPageButton","userEmail","onMyPageButtonClickHandler","email","onSignOutButtonClickHandler","path","expires","Date","onSignInButtonHandler","UploadButton","title","content","boardImageFileList","resetBoard","onUploadButtonClickHandler","startsWith","id","_c","$RefreshReg$"],"sources":["C:/my_lab/book/book-frontend/src/layouts/Header/index.tsx"],"sourcesContent":["import {\n  AUTH_PATH,\n  BOARD_DETAILPATH,\n  BOARD_PATH,\n  BOARD_UPDATE_PATH,\n  BOARD_WRITE_PATH,\n  MAIN_PATH,\n  SEARCH_PATH,\n  USER_PATH,\n} from 'constant';\nimport { ChangeEvent, KeyboardEvent, useEffect, useRef, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { useBoardStore, useLoginUserStore } from 'stores';\nimport './style.css';\n\n//              components(header)      //\nexport default function Header() {\n  //        state: 로그인 유저 상태    //\n  const { loginUser, setLoginUser, resetLoginUser } = useLoginUserStore();\n  // state: path  상태     //\n  const { pathname } = useLocation();\n  // state: cookie 상태     //\n  const [cookies, setCookie] = useCookies();\n\n  //        state: 로그인상태    //\n  const [isLogin, setLogin] = useState<boolean>(false);\n  //        state: 인증 페이지 상태    //\n  const [isAuthPage, setAuthPage] = useState<boolean>(false);\n  //        state: 메인페이지 상태    //\n  const [isMainPage, setMainPage] = useState<boolean>(false);\n  //        state: 검색 페이지 상태    //\n  const [isSearchPage, setSearchPage] = useState<boolean>(false);\n  //        state: 게시물 상세 페이지 상태    //\n  const [isBoardDetailPage, setBoardDetailPage] = useState<boolean>(false);\n  //        state:  게시물 작성 페이지 상태    //\n  const [isBoardWritePage, setBoardWritePage] = useState<boolean>(false);\n  //        state:  게시물 수정 페이지 상태    //\n  const [isBoardUpdatePage, setBoardUpdatePage] = useState<boolean>(false);\n  //        state:  유저 페이지 상태    //\n  const [isUserPage, setUserPage] = useState<boolean>(false);\n\n  // navigator: 네비게이트 함수//\n  const navigate = useNavigate();\n\n  // event handler 로고 클릭 이벤트 처리함수 //\n  const onLogoClickHandler = () => {\n    navigate(MAIN_PATH());\n  };\n\n  // components(Search button)                  //\n  const SearchButton = () => {\n    // state: searchButton button state           //\n    const searchButtonRef = useRef<HTMLDivElement | null>(null);\n    // state: search button state           //\n    const [status, setStatus] = useState<Boolean>(false);\n    // state: searchword state           //\n    const [Word, setWord] = useState<string>('');\n    // state: searchword path variable status           //\n    const { searchWord } = useParams();\n\n    // event handler(searchWord change)     //\n    const onSearchWordChangeHandler = (\n      event: ChangeEvent<HTMLInputElement>,\n    ) => {\n      const value = event.target.value;\n      setWord(value);\n    };\n    // event handler(searchWord key)     //\n    const onSearchWordKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      if (!searchButtonRef.current) return;\n      searchButtonRef.current.click();\n    };\n\n    // event handler(search icon click)     //\n    const onSearchButtonClickHandler = () => {\n      if (!status) {\n        setStatus(!status);\n        return;\n      }\n      navigate(SEARCH_PATH(Word));\n    };\n    // effect 검색어 path variable 변경 될 때 마다 실행할 함수     //\n    useEffect(() => {\n      if (searchWord) {\n        setWord(searchWord);\n        setStatus(true);\n      }\n    }, [searchWord]);\n\n    if (!status)\n      // render click false //\n      return (\n        <div className=\"icon-button\" onClick={onSearchButtonClickHandler}>\n          <div className=\"icon search-light-icon\"></div>\n        </div>\n      );\n    // render click true //\n    return (\n      <div className=\"header-search-input-box\">\n        <input\n          className=\"header-search-input\"\n          type=\"text\"\n          placeholder=\"검색어를 입력해주세요.\"\n          value={Word}\n          onChange={onSearchWordChangeHandler}\n          onKeyDown={onSearchWordKeyDownHandler}\n        />\n        <div\n          ref={searchButtonRef}\n          className=\"icon-button\"\n          onClick={onSearchButtonClickHandler}\n        >\n          <div className=\"icon search-light-icon\"></div>\n        </div>\n      </div>\n    );\n  };\n\n  //              components(로그인 또는 마이페이지 컴포넌트)      //\n  const MyPageButton = () => {\n    // state: userEmail path variable 상태  //\n    const { userEmail } = useParams();\n\n    // event handler(마이페이지 버튼 클릭 이벤트 처리 함수)     //\n    const onMyPageButtonClickHandler = () => {\n      if (!loginUser) return;\n      const { email } = loginUser;\n\n      navigate(USER_PATH(email));\n    };\n    // event handler(마이페이지 버튼 클릭 이벤트 처리 함수)     //\n    const onSignOutButtonClickHandler = () => {\n      resetLoginUser();\n      setCookie('accessToken', '', { path: MAIN_PATH(), expires: new Date })\n      navigate(MAIN_PATH());\n    };\n    // event handler(로그인 버튼 클릭 이벤트 처리 함수)     //\n    const onSignInButtonHandler = () => {\n      navigate(AUTH_PATH());\n    };\n\n    // render: 로그아웃 버튼   //\n    if (isLogin && userEmail === loginUser?.email)\n      return (\n        <div className=\"white-button\" onClick={onSignOutButtonClickHandler}>\n          {'로그아웃'}\n        </div>\n      );\n    // render: 마이페이지 버튼   //\n    if (isLogin)\n      return (\n        <div className=\"white-button\" onClick={onMyPageButtonClickHandler}>\n          {'마이페이지'}\n        </div>\n      );\n\n    // render  로그인 버튼//\n    return (\n      <div className=\"black-button\" onClick={onSignInButtonHandler}>\n        {'로그인'}\n      </div>\n    );\n  };\n  //              components(업로드 버튼 컴포넌트)      //\n  const UploadButton = () => {\n    // state: 게시물 상태   //\n    const { title, content, boardImageFileList, resetBoard } = useBoardStore();\n\n    // event handler : 업로드 버튼 클릭 이벤트 처리 함수  //\n    const onUploadButtonClickHandler = () => {};\n\n    // render  업로드 버튼//\n    if (title && content)\n      return (\n        <div className=\"black-button\" onClick={onUploadButtonClickHandler}>\n          {'업로드'}\n        </div>\n      );\n\n    // render  업로드 불가 버튼//\n\n    return <div className=\"disable-button\">{'업로드'}</div>;\n  };\n  // effect: path가 변경 될 때마다 실행될 함수//\n  useEffect(() => {\n    const isAuthPage = pathname.startsWith(AUTH_PATH());\n    setAuthPage(isAuthPage);\n    const isMainPage = pathname === MAIN_PATH();\n    setMainPage(isMainPage);\n    const isSearchPage = pathname.startsWith(SEARCH_PATH(''));\n    setSearchPage(isSearchPage);\n    const isBoardDetailPage = pathname.startsWith(\n      BOARD_PATH() + '/' + BOARD_DETAILPATH(''),\n    );\n    setBoardDetailPage(isBoardDetailPage);\n    const isBoardWritePage = pathname.startsWith(\n      BOARD_PATH() + '/' + BOARD_WRITE_PATH(),\n    );\n    setBoardWritePage(isBoardWritePage);\n    const isBoardUpdatePage = pathname.startsWith(\n      BOARD_PATH() + '/' + BOARD_UPDATE_PATH(''),\n    );\n    setBoardUpdatePage(isBoardUpdatePage);\n    const isUserPage = pathname.startsWith(USER_PATH(''));\n    setUserPage(isUserPage);\n  }, [pathname]);\n  // effect: login user가 변경 될 때마다 실행될 함수//\n  useEffect(() => {\n    setLogin(loginUser !== null);\n  }, [loginUser]);\n  // render   //\n  return (\n    <div id=\"header\">\n      <div className=\"header-container\">\n        <div className=\"header-left-box\" onClick={onLogoClickHandler}>\n          <div className=\"icon-box\">\n            <div className=\"icon logo-dark-icon\"></div>\n          </div>\n          <div className=\"header-logo\">{'FOR JP'}</div>\n        </div>\n        <div className=\"header-right-box\">\n          {(isAuthPage || isMainPage || isSearchPage || isBoardDetailPage) && (\n            <SearchButton />\n          )}\n          {(isMainPage || isBoardDetailPage || isSearchPage || isUserPage) && (\n            <MyPageButton />\n          )}\n          {(isBoardWritePage || isBoardUpdatePage) && <UploadButton />}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}