{"ast":null,"code":"import axios from 'axios';\nconst DOMAIN = 'http://localhost:4000';\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\nconst authorization = accessToken => {\n  return {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  };\n};\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\n_c = SIGN_IN_URL;\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\n_c2 = SIGN_UP_URL;\nexport const signInRequest = async requestBody => {\n  const result = await axios.post(SIGN_IN_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst POST_BOARD_URL = () => `${API_DOMAIN}/board`;\n_c3 = POST_BOARD_URL;\nexport const postBoardsRequest = async (requestBody, accessToken) => {\n  const result = await axios.post(POST_BOARD_URL(), requestBody, authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nexport const signUpRequest = async requestBody => {\n  const result = await axios.post(SIGN_UP_URL(), requestBody).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response.data) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\n_c4 = GET_SIGN_IN_USER_URL;\nexport const getSignInUserRequest = async accessToken => {\n  const result = await axios.get(GET_SIGN_IN_USER_URL(), authorization(accessToken)).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    if (!error.response) return null;\n    const responseBody = error.response.data;\n    return responseBody;\n  });\n  return result;\n};\nconst FILE_DOMAIN = `${DOMAIN}/file`;\nconst FILE_UPLOAD_URL = () => `${FILE_DOMAIN}/upload`;\n_c5 = FILE_UPLOAD_URL;\nconst mutipartFormData = {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n};\nexport const fileUploadRequest = async data => {\n  const result = await axios.post(FILE_UPLOAD_URL(), data, mutipartFormData).then(response => {\n    const responseBody = response.data;\n    return responseBody;\n  }).catch(error => {\n    return null;\n  });\n  return result;\n};\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"SIGN_IN_URL\");\n$RefreshReg$(_c2, \"SIGN_UP_URL\");\n$RefreshReg$(_c3, \"POST_BOARD_URL\");\n$RefreshReg$(_c4, \"GET_SIGN_IN_USER_URL\");\n$RefreshReg$(_c5, \"FILE_UPLOAD_URL\");","map":{"version":3,"names":["axios","DOMAIN","API_DOMAIN","authorization","accessToken","headers","Authorization","SIGN_IN_URL","_c","SIGN_UP_URL","_c2","signInRequest","requestBody","result","post","then","response","responseBody","data","catch","error","POST_BOARD_URL","_c3","postBoardsRequest","signUpRequest","GET_SIGN_IN_USER_URL","_c4","getSignInUserRequest","get","FILE_DOMAIN","FILE_UPLOAD_URL","_c5","mutipartFormData","fileUploadRequest","$RefreshReg$"],"sources":["C:/my_lab/book-2/book/book-frontend/src/apis/index.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { SignInRequestDto, SignUpRequestDto } from './request/auth';\r\nimport { ResponseDto } from './response';\r\nimport { SignInResponseDto, SignUpResponseDto } from './response/auth';\r\nimport { PostBoardResponseDto } from './response/board';\r\nimport { GetSignInUserResponseDto } from './response/user';\r\n\r\nconst DOMAIN = 'http://localhost:4000';\r\n\r\nconst API_DOMAIN = `${DOMAIN}/api/v1`;\r\n\r\nconst authorization = (accessToken: string) => {\r\n  return {\r\n    headers: {\r\n      Authorization: `Bearer ${accessToken}`,\r\n    },\r\n  };\r\n};\r\n\r\nconst SIGN_IN_URL = () => `${API_DOMAIN}/auth/sign-in`;\r\nconst SIGN_UP_URL = () => `${API_DOMAIN}/auth/sign-up`;\r\n\r\nexport const signInRequest = async (requestBody: SignInRequestDto) => {\r\n  const result = await axios\r\n    .post(SIGN_IN_URL(), requestBody)\r\n    .then((response) => {\r\n      const responseBody: SignInResponseDto = response.data;\r\n      return responseBody;\r\n    })\r\n    .catch((error) => {\r\n      if (!error.response.data) return null;\r\n      const responseBody: ResponseDto = error.response.data;\r\n      return responseBody;\r\n    });\r\n  return result;\r\n};\r\n\r\n\r\nconst POST_BOARD_URL = () => `${API_DOMAIN}/board`;\r\n\r\nexport const postBoardsRequest = async (requestBody: PostBoardResponseDto, accessToken: string) => {\r\n  const result = await axios.post(POST_BOARD_URL(), requestBody, authorization(accessToken))\r\n    .then(response => {\r\n        const responseBody: PostBoardResponseDto = response.data;\r\n        return responseBody;\r\n    })\r\n    .catch(error => {\r\n      if(!error.response) return null;\r\n      const responseBody: ResponseDto =error.response.data;\r\n      return responseBody;\r\n    })\r\n    return result;\r\n}\r\n\r\n\r\nexport const signUpRequest = async (requestBody: SignUpRequestDto) => {\r\n  const result = await axios\r\n    .post(SIGN_UP_URL(), requestBody)\r\n    .then((response) => {\r\n      const responseBody: SignUpResponseDto = response.data;\r\n      return responseBody;\r\n    })\r\n    .catch((error) => {\r\n      if (!error.response.data) return null;\r\n      const responseBody: ResponseDto = error.response.data;\r\n      return responseBody;\r\n    });\r\n  return result;\r\n};\r\n\r\nconst GET_SIGN_IN_USER_URL = () => `${API_DOMAIN}/user`;\r\n\r\nexport const getSignInUserRequest = async (accessToken: string) => {\r\n  const result = await axios\r\n    .get(GET_SIGN_IN_USER_URL(), authorization(accessToken))\r\n    .then((response) => {\r\n      const responseBody: GetSignInUserResponseDto = response.data;\r\n      return responseBody;\r\n    })\r\n    .catch((error) => {\r\n      if (!error.response) return null;\r\n      const responseBody: ResponseDto = error.response.data;\r\n      return responseBody;\r\n    });\r\n  return result;\r\n};\r\n\r\nconst FILE_DOMAIN = `${DOMAIN}/file`;\r\n\r\nconst FILE_UPLOAD_URL = () => `${FILE_DOMAIN}/upload`;\r\n\r\nconst mutipartFormData = {headers: {'Content-Type': 'multipart/form-data'}};\r\n\r\nexport const fileUploadRequest = async (data: FormData) => {\r\n    const result = await axios.post(FILE_UPLOAD_URL(), data, mutipartFormData)\r\n      .then(response => {\r\n        const responseBody: string= response.data;\r\n        return responseBody;\r\n      })\r\n      .catch(error => {\r\n          return null;\r\n      })\r\n      return result;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}