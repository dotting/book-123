{"ast":null,"code":"var _jsxFileName = \"C:\\\\my_lab\\\\book\\\\book-frontend\\\\src\\\\views\\\\Authentication\\\\index.tsx\",\n  _s3 = $RefreshSig$();\nimport { signInRequest } from 'apis';\nimport InputBox from 'components/InputBox';\nimport { MAIN_PATH } from 'constant';\nimport { useRef, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\n\n//          components 인증화면           //\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Authentication() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  //          state: 화면 상태        //\n  const [view, setView] = useState('sign-in');\n  //          state: 쿠키 상태        //\n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수        //\n  const navigator = useNavigate();\n  //          components sign in card 컴포넌트           //\n  const SignInCard = () => {\n    _s();\n    // state: 이메일 요소 참조 상태       //\n    const emailRef = useRef(null);\n    // state: 패스워드 요소 상태       //\n    const passwordRef = useRef(null);\n    // state: 이메일 상태       //\n    const [email, setEmail] = useState('');\n\n    // state: 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    // state: 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState('password');\n    // state: 패스워드 버튼 아이콘 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    // state: error 상태       //\n    const [error, setError] = useState(false);\n\n    // function : sign in response 처리 함수    //\n    const signInResponse = responseBody => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다');\n        return;\n      }\n      const {\n        code\n      } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n      const {\n        token,\n        expirationTime\n      } = responseBody;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n      setCookie('accessToken', token, {\n        expires,\n        path: MAIN_PATH()\n      });\n      navigator(MAIN_PATH());\n    };\n\n    //          event handler: 이메일 변경이벤트 처리 함수   //\n    const onEmailChangeHandlder = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n\n    //          event handler: 비밀번호 변경이벤트 처리 함수   //\n    const onPasswordChangeHandlder = event => {\n      setError(false);\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수   //\n    const onSignInButtonClickHandler = () => {\n      const requestBody = {\n        email,\n        password\n      };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //          event handler: 회원가입 링크 클릭 이벤트 처리 함수   //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수   //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n\n    //          event handler: 이메일 인풋 키다운 이벤트 처리 함수   //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    //          event handler: 패스워드 인풋 키다운 이벤트 처리 함수   //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //          render(sign In)      //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-title\",\n              children: '로그인'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n            error: error,\n            value: email,\n            onChange: onEmailChangeHandlder,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uD328\\uC2A4\\uC6CC\\uB4DC\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            error: error,\n            value: password,\n            onChange: onPasswordChangeHandlder,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHandler,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-sign-in-error-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-sign-in-error-message\",\n              children: '이메일 주소 또는 비밀번호를 잘못 입력하셨습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onSignInButtonClickHandler,\n            children: '로그인'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['신규 사용자이신가요?', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-description-link\",\n                onClick: onSignUpLinkClickHandler,\n                children: '회원가입'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this);\n  };\n\n  //          components sign up card 컴포넌트           //\n  _s(SignInCard, \"+MankW9kCs+nZSw2btqK0txeSEY=\");\n  const SignUpCard = () => {\n    _s2();\n    //      state: 이메일 요소 참조 상태       //\n    const emailRef = useRef(null);\n    //      state: 패스워드 요소 참조 상태       //\n    const passwordRef = useRef(null);\n    //      state: 패스워드 확인 요소 참조 상태       //\n    const passwordCheckRef = useRef(null);\n    //      state: 페이지 번호 상태       //\n    const [page, setPage] = useState(1);\n    //      state: 이메일 상태       //\n    const [email, setEmail] = useState('');\n    //      state: 패스워드 상태       //\n    const [password, setPassword] = useState('');\n    //      state: 패스워드 확인 상태       //\n    const [passwordCheck, setPasswordCheck] = useState('');\n\n    //      state: 패스워드 타입 상태       //\n    const [passwordType, setpasswordType] = useState('password');\n    //      state: 패스워드 확인 타입 상태       //\n    const [passwordCheckType, setpasswordCheckType] = useState('password');\n    //      state: 이메일 에러 상태       //\n    const [isEmailError, setEmailError] = useState(false);\n    //      state: 패스워드 에러 상태       //\n    const [isPasswordError, setPasswordError] = useState(false);\n    //      state: 패스워드 확인 에러 상태       //\n    const [isPasswordCheckError, setPasswordCheckError] = useState(false);\n    //      state: 이메일 에러 메세지 상태       //\n    const [emailErrorMessage, setEmailErrorMessage] = useState('');\n    //      state: 패스워드 에러 메세지 상태       //\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n    //      state: 패스워드 확인 에러 메세지 상태       //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] = useState('');\n\n    // state: 패스워드 버튼 아이콘 상태     //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState('eye-light-off-icon');\n    // state: 패스워드 확인 버튼 아이콘 상태     //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState('eye-light-off-icon');\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setEmail(value);\n    };\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPassword(value);\n    };\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = event => {\n      const {\n        value\n      } = event.target;\n      setPasswordCheck(value);\n    };\n    //        event handler: 패스워드 버튼 클릭 이벤트 처리      //\n    const onPasswordButtonClickHanlder = () => {\n      if (passwordButtonIcon == 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setpasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setpasswordType('password');\n      }\n    };\n    //        event handler: 패스워드 확인 버튼 클릭 이벤트 처리      //\n    const onPasswordCheckButtonClickHanlder = () => {\n      if (passwordButtonIcon == 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setpasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setpasswordCheckType('password');\n      }\n    };\n    //        event handler: 다음 단계버튼 클릭 이벤트 처리      //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = event => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      onNextButtonClickHandler();\n    };\n    //          render(sign Up)      //\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-top\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-card-title-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"authcard-title\",\n              children: '회원가입'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-card-page\",\n              children: `${page}/2`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: emailRef,\n            label: \"\\uC774\\uBA54\\uC78F \\uC8FC\\uC18C*\",\n            type: \"text\",\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: email,\n            onChange: onEmailChangeHandler,\n            error: isEmailError,\n            message: emailErrorMessage,\n            onKeyDown: onEmailKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638*\",\n            type: passwordType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: password,\n            onChange: onPasswordChangeHandler,\n            error: isPasswordError,\n            message: passwordErrorMessage,\n            icon: passwordButtonIcon,\n            onButtonClick: onPasswordButtonClickHanlder,\n            onKeyDown: onPasswordKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputBox, {\n            ref: passwordCheckRef,\n            label: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778*\",\n            type: passwordCheckType,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uB2E4\\uC2DC \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: passwordCheck,\n            onChange: onPasswordCheckChangeHandler,\n            error: isPasswordCheckError,\n            message: passwordCheckErrorMessage,\n            icon: passwordCheckButtonIcon,\n            onButtonClick: onPasswordCheckButtonClickHanlder,\n            onKeyDown: onPasswordCheckKeyDownHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-card-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"black-large-full-button\",\n            onClick: onNextButtonClickHandler,\n            children: '다음 단계'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-description-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-description\",\n              children: ['이미 계정이 있으신가요? ', ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"auth-descroption-link\",\n                children: ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this);\n  };\n\n  //          render(authentication)      //\n  _s2(SignUpCard, \"dijUr8k5KZQbqcWlHeytB36a8zc=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"auth-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-jumbotron-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-jumbotron-contents\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-jumbotron-text-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: ['환영합니다', \"di\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"auth-jumbotron-text\",\n              children: 'FOR JP 입니다'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), view === 'sign-in' && /*#__PURE__*/_jsxDEV(SignInCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 32\n      }, this), view === 'sign-up' && /*#__PURE__*/_jsxDEV(SignUpCard, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 5\n  }, this);\n}\n_s3(Authentication, \"9S/UTW4boHJSdDcSeMSTDXfl25A=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["signInRequest","InputBox","MAIN_PATH","useRef","useState","useCookies","useNavigate","jsxDEV","_jsxDEV","Authentication","_s3","_s","$RefreshSig$","_s2","view","setView","cookies","setCookie","navigator","SignInCard","emailRef","passwordRef","email","setEmail","password","setPassword","passwordType","setPasswordType","passwordButtonIcon","setPasswordButtonIcon","error","setError","signInResponse","responseBody","alert","code","token","expirationTime","now","Date","getTime","expires","path","onEmailChangeHandlder","event","value","target","onPasswordChangeHandlder","onSignInButtonClickHandler","requestBody","then","onSignUpLinkClickHandler","onPasswordButtonClickHandler","onEmailKeyDownHandler","key","current","focus","onPasswordKeyDownHandler","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","label","type","placeholder","onChange","onKeyDown","icon","onButtonClick","onClick","SignUpCard","passwordCheckRef","page","setPage","passwordCheck","setPasswordCheck","setpasswordType","passwordCheckType","setpasswordCheckType","isEmailError","setEmailError","isPasswordError","setPasswordError","isPasswordCheckError","setPasswordCheckError","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","passwordCheckErrorMessage","setPasswordCheckErrorMessage","passwordCheckButtonIcon","setPasswordCheckButtonIcon","onEmailChangeHandler","onPasswordChangeHandler","onPasswordCheckChangeHandler","onPasswordButtonClickHanlder","onPasswordCheckButtonClickHanlder","onNextButtonClickHandler","emailPattern","isEmailPattern","test","isCheckedPassword","trim","length","isEqualPassword","onPasswordCheckKeyDownHandler","message","id","_c","$RefreshReg$"],"sources":["C:/my_lab/book/book-frontend/src/views/Authentication/index.tsx"],"sourcesContent":["import { signInRequest } from 'apis';\nimport { SignInRequestDto } from 'apis/request/auth';\nimport { ResponseDto } from 'apis/response';\nimport { SignInResponseDto } from 'apis/response/auth';\nimport InputBox from 'components/InputBox';\nimport { MAIN_PATH } from 'constant';\nimport { ChangeEvent, KeyboardEvent, useRef, useState } from 'react';\nimport { useCookies } from 'react-cookie';\nimport { useNavigate } from 'react-router-dom';\nimport './style.css';\n\n//          components 인증화면           //\nexport default function Authentication() {\n  //          state: 화면 상태        //\n  const [view, setView] = useState<'sign-in' | 'sign-up'>('sign-in');\n  //          state: 쿠키 상태        //\n  const [cookies, setCookie] = useCookies();\n  // function: 네비게이트 함수        //\n  const navigator = useNavigate();\n  //          components sign in card 컴포넌트           //\n  const SignInCard = () => {\n    // state: 이메일 요소 참조 상태       //\n    const emailRef = useRef<HTMLInputElement | null>(null);\n    // state: 패스워드 요소 상태       //\n    const passwordRef = useRef<HTMLInputElement | null>(null);\n    // state: 이메일 상태       //\n    const [email, setEmail] = useState<string>('');\n\n    // state: 패스워드 상태       //\n    const [password, setPassword] = useState<string>('');\n    // state: 패스워드 타입 상태       //\n    const [passwordType, setPasswordType] = useState<'text' | 'password'>(\n      'password',\n    );\n    // state: 패스워드 버튼 아이콘 상태       //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\n      'eye-light-off-icon' | 'eye-light-on-icon'\n    >('eye-light-off-icon');\n    // state: error 상태       //\n    const [error, setError] = useState<boolean>(false);\n\n    // function : sign in response 처리 함수    //\n    const signInResponse = (\n      responseBody: SignInResponseDto | ResponseDto | null,\n    ) => {\n      if (!responseBody) {\n        alert('네트워크 이상입니다');\n        return;\n      }\n      const { code } = responseBody;\n      if (code === 'DBE') alert('데이터베이스 오류입니다.');\n      if (code === 'SF' || code === 'VF') setError(true);\n      if (code !== 'SU') return;\n\n      const { token, expirationTime } = responseBody as SignInResponseDto;\n      const now = new Date().getTime();\n      const expires = new Date(now + expirationTime * 1000);\n\n      setCookie('accessToken', token, { expires, path: MAIN_PATH() });\n      navigator(MAIN_PATH());\n    };\n\n    //          event handler: 이메일 변경이벤트 처리 함수   //\n    const onEmailChangeHandlder = (event: ChangeEvent<HTMLInputElement>) => {\n      setError(false);\n      const { value } = event.target;\n      setEmail(value);\n    };\n\n    //          event handler: 비밀번호 변경이벤트 처리 함수   //\n    const onPasswordChangeHandlder = (event: ChangeEvent<HTMLInputElement>) => {\n      setError(false);\n      const { value } = event.target;\n      setPassword(value);\n    };\n\n    //          event handler: 로그인 버튼 클릭 이벤트 처리 함수   //\n    const onSignInButtonClickHandler = () => {\n      const requestBody: SignInRequestDto = { email, password };\n      signInRequest(requestBody).then(signInResponse);\n    };\n\n    //          event handler: 회원가입 링크 클릭 이벤트 처리 함수   //\n    const onSignUpLinkClickHandler = () => {\n      setView('sign-up');\n    };\n\n    //          event handler: 패스워드 버튼 클릭 이벤트 처리 함수   //\n    const onPasswordButtonClickHandler = () => {\n      if (passwordType === 'text') {\n        setPasswordType('password');\n        setPasswordButtonIcon('eye-light-off-icon');\n      } else {\n        setPasswordType('text');\n        setPasswordButtonIcon('eye-light-on-icon');\n      }\n    };\n\n    //          event handler: 이메일 인풋 키다운 이벤트 처리 함수   //\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    //          event handler: 패스워드 인풋 키다운 이벤트 처리 함수   //\n    const onPasswordKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      onSignInButtonClickHandler();\n    };\n\n    //          render(sign In)      //\n    return (\n      <div className=\"auth-card\">\n        <div className=\"auth-card-box\">\n          <div className=\"auth-card-top\">\n            <div className=\"auth-card-title-box\">\n              <div className=\"auth-card-title\">{'로그인'}</div>\n            </div>\n            <InputBox\n              ref={emailRef}\n              label=\"이메일 주소\"\n              type=\"text\"\n              placeholder=\"이메일 주소를 입력해주세요\"\n              error={error}\n              value={email}\n              onChange={onEmailChangeHandlder}\n              onKeyDown={onEmailKeyDownHandler}\n            />\n            <InputBox\n              ref={passwordRef}\n              label=\"패스워드\"\n              type={passwordType}\n              placeholder=\"비밀번호를 입력해주세요.\"\n              error={error}\n              value={password}\n              onChange={onPasswordChangeHandlder}\n              icon={passwordButtonIcon}\n              onButtonClick={onPasswordButtonClickHandler}\n              onKeyDown={onPasswordKeyDownHandler}\n            />\n          </div>\n          <div className=\"auth-card-bottom\">\n            {error && (\n              <div className=\"auth-sign-in-error-box\">\n                <div className=\"auth-sign-in-error-message\">\n                  {\n                    '이메일 주소 또는 비밀번호를 잘못 입력하셨습니다. \\n 입력하신 내용을 다시 확인해주세요.'\n                  }\n                </div>\n              </div>\n            )}\n            <div\n              className=\"black-large-full-button\"\n              onClick={onSignInButtonClickHandler}\n            >\n              {'로그인'}\n            </div>\n            <div className=\"auth-description-box\">\n              <div className=\"auth-description\">\n                {'신규 사용자이신가요?'}\n                <span\n                  className=\"auth-description-link\"\n                  onClick={onSignUpLinkClickHandler}\n                >\n                  {'회원가입'}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //          components sign up card 컴포넌트           //\n  const SignUpCard = () => {\n    //      state: 이메일 요소 참조 상태       //\n    const emailRef = useRef<HTMLInputElement | null>(null);\n    //      state: 패스워드 요소 참조 상태       //\n    const passwordRef = useRef<HTMLInputElement | null>(null);\n    //      state: 패스워드 확인 요소 참조 상태       //\n    const passwordCheckRef = useRef<HTMLInputElement | null>(null);\n    //      state: 페이지 번호 상태       //\n    const [page, setPage] = useState<1 | 2>(1);\n    //      state: 이메일 상태       //\n    const [email, setEmail] = useState<string>('');\n    //      state: 패스워드 상태       //\n    const [password, setPassword] = useState<string>('');\n    //      state: 패스워드 확인 상태       //\n    const [passwordCheck, setPasswordCheck] = useState<string>('');\n\n    //      state: 패스워드 타입 상태       //\n    const [passwordType, setpasswordType] = useState<'text' | 'password'>(\n      'password',\n    );\n    //      state: 패스워드 확인 타입 상태       //\n    const [passwordCheckType, setpasswordCheckType] = useState<\n      'text' | 'password'\n    >('password');\n    //      state: 이메일 에러 상태       //\n    const [isEmailError, setEmailError] = useState<boolean>(false);\n    //      state: 패스워드 에러 상태       //\n    const [isPasswordError, setPasswordError] = useState<boolean>(false);\n    //      state: 패스워드 확인 에러 상태       //\n    const [isPasswordCheckError, setPasswordCheckError] =\n      useState<boolean>(false);\n    //      state: 이메일 에러 메세지 상태       //\n    const [emailErrorMessage, setEmailErrorMessage] = useState<string>('');\n    //      state: 패스워드 에러 메세지 상태       //\n    const [passwordErrorMessage, setPasswordErrorMessage] =\n      useState<string>('');\n    //      state: 패스워드 확인 에러 메세지 상태       //\n    const [passwordCheckErrorMessage, setPasswordCheckErrorMessage] =\n      useState<string>('');\n\n    // state: 패스워드 버튼 아이콘 상태     //\n    const [passwordButtonIcon, setPasswordButtonIcon] = useState<\n      'eye-light-off-icon' | 'eye-light-on-icon'\n    >('eye-light-off-icon');\n    // state: 패스워드 확인 버튼 아이콘 상태     //\n    const [passwordCheckButtonIcon, setPasswordCheckButtonIcon] = useState<\n      'eye-light-off-icon' | 'eye-light-on-icon'\n    >('eye-light-off-icon');\n\n    // event handler: 이메일 변경 이벤트 처리 //\n    const onEmailChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setEmail(value);\n    };\n    // event handler: 패스워드 변경 이벤트 처리 //\n    const onPasswordChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\n      const { value } = event.target;\n      setPassword(value);\n    };\n    // event handler: 패스워드 확인 변경 이벤트 처리 //\n    const onPasswordCheckChangeHandler = (\n      event: ChangeEvent<HTMLInputElement>,\n    ) => {\n      const { value } = event.target;\n      setPasswordCheck(value);\n    };\n    //        event handler: 패스워드 버튼 클릭 이벤트 처리      //\n    const onPasswordButtonClickHanlder = () => {\n      if (passwordButtonIcon == 'eye-light-off-icon') {\n        setPasswordButtonIcon('eye-light-on-icon');\n        setpasswordType('text');\n      } else {\n        setPasswordButtonIcon('eye-light-off-icon');\n        setpasswordType('password');\n      }\n    };\n    //        event handler: 패스워드 확인 버튼 클릭 이벤트 처리      //\n    const onPasswordCheckButtonClickHanlder = () => {\n      if (passwordButtonIcon == 'eye-light-off-icon') {\n        setPasswordCheckButtonIcon('eye-light-on-icon');\n        setpasswordCheckType('text');\n      } else {\n        setPasswordCheckButtonIcon('eye-light-off-icon');\n        setpasswordCheckType('password');\n      }\n    };\n    //        event handler: 다음 단계버튼 클릭 이벤트 처리      //\n    const onNextButtonClickHandler = () => {\n      const emailPattern = /^[a-zA-Z0-9]*@([-.]?[a-zA-Z0-9])*\\.[a-zA-z]{2,4}$/;\n      const isEmailPattern = emailPattern.test(email);\n      if (!isEmailPattern) {\n        setEmailError(true);\n        setEmailErrorMessage('이메일 주소 포맷이 맞지 않습니다.');\n      }\n      const isCheckedPassword = password.trim().length >= 8;\n      if (!isCheckedPassword) {\n        setPasswordError(true);\n        setPasswordErrorMessage('비밀번호는 8자 이상 입력해주세요.');\n      }\n      const isEqualPassword = password === passwordCheck;\n      if (!isEqualPassword) {\n        setPasswordCheckError(true);\n        setPasswordCheckErrorMessage('비밀번호가 일치하지 않습니다.');\n      }\n      if (!isEmailPattern || !isCheckedPassword || !isEqualPassword) return;\n      setPage(2);\n    };\n    // event handler: 이메일 키 다운 이벤트 처리      //\n    const onEmailKeyDownHandler = (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      passwordRef.current.focus();\n    };\n    // event handler: 패스워드 키 다운 이벤트 처리      //\n    const onPasswordKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordCheckRef.current) return;\n      passwordCheckRef.current.focus();\n    };\n    // event handler: 패스워드 확인 키 다운 이벤트 처리      //\n    const onPasswordCheckKeyDownHandler = (\n      event: KeyboardEvent<HTMLInputElement>,\n    ) => {\n      if (event.key !== 'Enter') return;\n      if (!passwordRef.current) return;\n      onNextButtonClickHandler();\n    };\n    //          render(sign Up)      //\n    return (\n      <div className=\"auth-card\">\n        <div className=\"auth-card-box\">\n          <div className=\"auth-card-top\">\n            <div className=\"auth-card-title-box\">\n              <div className=\"authcard-title\">{'회원가입'}</div>\n              <div className=\"auth-card-page\">{`${page}/2`}</div>\n            </div>\n            <InputBox\n              ref={emailRef}\n              label=\"이메잏 주소*\"\n              type=\"text\"\n              placeholder=\"이메일 주소를 입력해주세요.\"\n              value={email}\n              onChange={onEmailChangeHandler}\n              error={isEmailError}\n              message={emailErrorMessage}\n              onKeyDown={onEmailKeyDownHandler}\n            />\n            <InputBox\n              ref={passwordRef}\n              label=\"비밀번호*\"\n              type={passwordType}\n              placeholder=\"비밀번호를 입력해주세요.\"\n              value={password}\n              onChange={onPasswordChangeHandler}\n              error={isPasswordError}\n              message={passwordErrorMessage}\n              icon={passwordButtonIcon}\n              onButtonClick={onPasswordButtonClickHanlder}\n              onKeyDown={onPasswordKeyDownHandler}\n            />\n            <InputBox\n              ref={passwordCheckRef}\n              label=\"비밀번호 확인*\"\n              type={passwordCheckType}\n              placeholder=\"비밀번호를 다시 입력해주세요.\"\n              value={passwordCheck}\n              onChange={onPasswordCheckChangeHandler}\n              error={isPasswordCheckError}\n              message={passwordCheckErrorMessage}\n              icon={passwordCheckButtonIcon}\n              onButtonClick={onPasswordCheckButtonClickHanlder}\n              onKeyDown={onPasswordCheckKeyDownHandler}\n            />\n          </div>\n          <div className=\"auth-card-bottom\">\n            <div\n              className=\"black-large-full-button\"\n              onClick={onNextButtonClickHandler}\n            >\n              {'다음 단계'}\n            </div>\n            <div className=\"auth-description-box\">\n              <div className=\"auth-description\">\n                {'이미 계정이 있으신가요? '}{' '}\n                <span className=\"auth-descroption-link\">{''}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //          render(authentication)      //\n  return (\n    <div id=\"auth-wrapper\">\n      <div className=\"auth-container\">\n        <div className=\"auth-jumbotron-box\">\n          <div className=\"auth-jumbotron-contents\">\n            <div className=\"auth-logo-icon\"></div>\n            <div className=\"auth-jumbotron-text-box\">\n              <div className=\"auth-jumbotron-text\">{'환영합니다'}di</div>\n              <div className=\"auth-jumbotron-text\">{'FOR JP 입니다'}</div>\n            </div>\n          </div>\n        </div>\n        {view === 'sign-in' && <SignInCard />}\n        {view === 'sign-up' && <SignUpCard />}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}