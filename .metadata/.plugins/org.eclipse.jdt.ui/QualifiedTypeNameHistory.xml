<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="org.h2.command.ddl.AlterDomain"/>
    <fullyQualifiedTypeName name="org.springframework.beans.FatalBeanException"/>
    <fullyQualifiedTypeName name="java.lang.Long"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.ResultActions"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.AfterEach"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.MvcResult"/>
    <fullyQualifiedTypeName name="org.springframework.test.web.servlet.result.RequestResultMatchers"/>
    <fullyQualifiedTypeName name="org.springframework.http.MediaType"/>
    <fullyQualifiedTypeName name="com.example.book.domain.BookRepository"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.Test"/>
    <fullyQualifiedTypeName name="com.example.book.domain.Book"/>
    <fullyQualifiedTypeName name="jakarta.persistence.Entity"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.CrossOrigin"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="java.time.temporal.ChronoUnit"/>
    <fullyQualifiedTypeName name="java.time.Instant"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.SignatureAlgorithm"/>
    <fullyQualifiedTypeName name="java.sql.Date"/>
    <fullyQualifiedTypeName name="java.util.Date"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Claims"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.Jwts"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Component"/>
    <fullyQualifiedTypeName name="com.example.book.provider.JwtProvider"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="org.apache.tomcat.util.http.parser.Authorization"/>
    <fullyQualifiedTypeName name="org.springframework.util.StringUtils"/>
    <fullyQualifiedTypeName name="org.springframework.core.type.filter.AbstractClassTestingTypeFilter"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="com.sun.tools.javac.resources.compiler"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AbstractAuthenticationToken"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="java.lang.NullPointerException"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.authority.AuthorityUtils"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.query.EqlParser.New_valueContext"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.WebAuthenticationDetailsSource"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContext"/>
    <fullyQualifiedTypeName name="org.springframework.security.core.context.SecurityContextHolder"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Configurable"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"/>
    <fullyQualifiedTypeName name="com.example.book.filter.JwtAuthenticationFilter"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="java.lang.Exception"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.antlr.v4.runtime.atn.SemanticContext.AND"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.configurers.CsrfConfigurer"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.SessionCreationPolicy"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.http.CorsBeanDefinitionParser"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfigurationSource"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.CorsConfiguration"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource"/>
    <fullyQualifiedTypeName name="ch.qos.logback.core.net.SocketConnector.ExceptionHandler"/>
</qualifiedTypeNameHistroy>
